@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using WeatherForecast.Entities
@using WeatherForecast.Services
@inject IWeatherForecastService ForecastService

<h1>Weather forecast records</h1>

<p>This component demonstrates fetching data from a service.</p>
<p>Refresh page to list new records.</p>

@if (ForecastService.WeatherForecasts?.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ident</th>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in ForecastService.WeatherForecasts)
            {
                <tr>
                    <td>@forecast.Id</td>
                    <td>@forecast.Date.ToString("yyyy/MM/dd hh:mm:ss")</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        await ForecastService.GetAllWeatherForecasts();
    }
}
